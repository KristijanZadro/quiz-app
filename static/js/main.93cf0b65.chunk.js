(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[0],{13:function(o,a,i){},15:function(o,a,i){"use strict";i.r(a);var n=i(1),r=i.n(n),t=i(7),e=i.n(t),d=(i(13),i(3)),v=(i(6),i(8)),j=[{id:1,pitanje:"Ako je u datoteci Startup.cs ASP.NET Core aplikacije u postupku Configure definirana sljede\u0107a ruta: \n \n App.UseMvc(routes => { \n \t \t Routes.MapRoute{ \n \t \t \t Name:\u201cdefault\u201c, \n \t \t \t Template: \u201e{controller=Home}/{action=Index}/{id}\u201c); \n \t \t } \n }; \n Tada adresa /Mjesto/?page=7 odgovara:",odgovori:[{odgovor:"postupku public ActionResult Index(int page) u datoteci Controllers/MjestoControler.cs",tocan:!0},{odgovor:"postupku private Index(int page) u datoteci Controllers/MjestoControler.cs",tocan:!1},{odgovor:"postupku rute u datoteci Name",tocan:!1},{odgovor:"postupku public ActionResult Index(float page) u datoteci rute",tocan:!1},{odgovor:"postupku private Index(float page) u datoteci Controllers/MjestoControler.cs",tocan:!1}],kategorija:1},{id:2,pitanje:"\u0160to je od navedenog istina za zahtjeve?",odgovori:[{odgovor:"Usmjeriti se na ono \u0161to je potrebno obaviti,a ne na na\u010din realizacije.",tocan:!0},{odgovor:"Agilni razvojni proces",tocan:!1},{odgovor:"String nije isto \u0161to i polje znakova(alias za char[]).",tocan:!1},{odgovor:"Usmjeriti se na ono \u0161to se ne treba obaviti.",tocan:!1},{odgovor:"Specifikacija zahtjeva",tocan:!1}],kategorija:1},{id:3,pitanje:"Ide neka petlja nisam uslikao \n {  i.Test(), \n ((B)i).Test(); \n B b = i; \n b.Test(); \n }}",odgovori:[{odgovor:"Pozdrav iz I \n Pozdrav iz B \n Pozdrav iz B",tocan:!0},{odgovor:"Pozdrav iz B \n Pozdrav iz I \n Pozdrav iz B",tocan:!1},{odgovor:"Pozdrav iz B \n Pozdrav iz B \n Pozdrav iz I",tocan:!1},{odgovor:"Pozdrav iz B \n Pozdrav iz I \n Pozdrav iz I",tocan:!1},{odgovor:"Pozdrav iz I \n Pozdrav iz B \n Pozdrav iz I",tocan:!1}],kategorija:1},{id:4,pitanje:"Prilikom upravljanja zahtjeva o usvajanju zahtjeva i postavljanju prioriteta i rokova odlu\u010duje:",odgovori:[{odgovor:"Odbora za promjene(Change Control Board)",tocan:!0},{odgovor:"Ofenzivno programiranje",tocan:!1},{odgovor:"Specifikacija zahtjeva",tocan:!1},{odgovor:"Hibridna aplikacija",tocan:!1},{odgovor:"ViewData i/ili ViewBag",tocan:!1}],kategorija:1},{id:5,pitanje:"Poredajte razine va\u017enosti zapisa od najmanje prema najve\u0107oj:",odgovori:[{odgovor:"Trace<Debug<Information<Warning<Error<Critical",tocan:!0},{odgovor:"Information<Trace<Debug<Warning<Error<Critical",tocan:!1},{odgovor:"Debug<Trace<Information<Warning<Error<Critical",tocan:!1},{odgovor:"Debug<Information<Trace<Warning<Error<Critical",tocan:!1},{odgovor:"Trace<Information<Warning<Debug<Error<Critical",tocan:!1}],kategorija:1},{id:6,pitanje:"Tehnika programiranja \u010dija je ideja u\u010diniti pogre\u0161ke u fazi razvoja o\u010ditima da ih je nemogu\u0107e zanemariti,naziva se:",odgovori:[{odgovor:"Ofenzivno programiranje",tocan:!0},{odgovor:"Specifikacija zahtjeva",tocan:!1},{odgovor:"Defanzivno programiranje",tocan:!1},{odgovor:"Planiranje",tocan:!1},{odgovor:"Elaboracija",tocan:!1}],kategorija:1},{id:7,pitanje:"Fazno uvo\u0111enje novog sustava u primjenu ima:",odgovori:[{odgovor:"Srednji rizik,srednji tro\u0161ak i dugo trajanje",tocan:!0},{odgovor:"Velik rizik, visok tro\u0161ak i dugo trajanje",tocan:!1},{odgovor:"Nizak rizik, visok tro\u0161ak i dugo trajanje",tocan:!1},{odgovor:"Srednji rizik, visok tro\u0161ak i kratko trajanje",tocan:!1},{odgovor:"Srednji rizik, srednji tro\u0161ak i kratko trajanje",tocan:!1}],kategorija:1},{id:8,pitanje:"Koja od navedenih tvrdnji nije istinita?",odgovori:[{odgovor:"String je isto \u0161to i polje znakova(alias za char[]).",tocan:!0},{odgovor:"Sponzor projekta je osoba ili grupa koja osigurava resurse za projekt.",tocan:!1},{odgovor:"Poslovni zahtjevi odgovaraju na pitanje za\u0161to.",tocan:!1},{odgovor:"Funkcionalni zahtjevi odgovaraju na pitanje \u0161to",tocan:!1},{odgovor:" WSDL ozna\u010dava XML shemu za opis web servisa.",tocan:!1}],kategorija:1},{id:9,pitanje:"Verzija konfiguracije koja predstavlja alternativu originalnoj verziji i \u017eivi paralelno snjom naziva se:",odgovori:[{odgovor:"Varijanta",tocan:!0},{odgovor:"Kovarijanta",tocan:!1},{odgovor:"Elaboracija",tocan:!1},{odgovor:"Prevencija",tocan:!1},{odgovor:"Autenti\u010dnost",tocan:!1}],kategorija:1},{id:10,pitanje:"????vjv dobra petlja i odg nisam siguran za pitanje????? Ako je SifArtikla primarni klju\u010d za tablicu Artikl te ako prije izvo\u0111enja programskog odsje\u010dka u tablici Artikl nije bilo artikala sa \u0161iframa 0-5,izvo\u0111enjem sljede\u0107eg programskog odsje\u010dka broj zapisa u tablici Artikl pove\u0107at \u0107e se za? \n \n For(int i=1; i<10; i++) \n { using(var context = new FirmaContext()) \n { \n \t Artikl artikl = new Artikl \n {\t\tSifArtikla = i/2,  CijArtikla= 10m, \n \t \t JedMjere= \u201ekom\u201c,  NazArtikla= i.ToString() \n } \n Context.Artikl.Add(artikl); \n }; \n Context.SaveChanges(); \n } \n \n Broj zapisa u tablici Artikl pove\u0107at \u0107e se za",odgovori:[{odgovor:"0",tocan:!0},{odgovor:"1",tocan:!1},{odgovor:"10",tocan:!1},{odgovor:"n/2",tocan:!1},{odgovor:"1/2",tocan:!1}],kategorija:1},{id:11,pitanje:"U planu projekta vrijedi sljede\u0107a formula",odgovori:[{odgovor:"Posao = Trajanje * Jedinice(Work=Duration*Units)",tocan:!0},{odgovor:"Posao = Trajanje / Jedinice(Work=Duration*Units)",tocan:!1},{odgovor:"Trajanje = Jedinice(Work=Duration*Units) / Posao",tocan:!1},{odgovor:"Trajanje = Posao * Jedinice(Work=Duration*Units)",tocan:!1},{odgovor:"Jedinice(Work=Duration*Units) = Trajanje / Posao",tocan:!1}],kategorija:1},{id:12,pitanje:"Ako WebApi(REST) servis uspje\u0161no obri\u0161e podatak korisniku \u0107e se vratiti statusna poruka \u010diji je statusni kod:",odgovori:[{odgovor:"204 NO CONTENT",tocan:!0},{odgovor:"404 NOT FOUND",tocan:!1},{odgovor:"410 GONE",tocan:!1},{odgovor:"205 NO CONTENT",tocan:!1},{odgovor:"301 MOVED PERMANENTLY",tocan:!1}],kategorija:1},{id:13,pitanje:"Neka petlja o osobi:",odgovori:[{odgovor:"public partial class Osoba{ \n ... \n Public Parner IdOsobeNavigation { get; set; } \n }",tocan:!0},{odgovor:"private partial class Osoba{ \n ... \n Public Parner IdOsobeNavigation { get; set; } \n }",tocan:!1},{odgovor:"public partial class Osoba{ \n ... \n Public Parner IdOsobeNavigation { get;} \n }",tocan:!1},{odgovor:"public partial class Osoba{ \n ... \n Public Parner Id { get; set; } \n }",tocan:!1},{odgovor:"public partial class Osoba{ \n ... \n Public Parner IdOsobeNavigation { null } \n }",tocan:!1}],kategorija:1},{id:14,pitanje:"\u0160to od navedenog nije faza testiranja:",odgovori:[{odgovor:"Testiranje autenti\u010dnosti",tocan:!0},{odgovor:"Integracijski testiranje",tocan:!1},{odgovor:"Test prihvatljivosti",tocan:!1},{odgovor:"Testiranje jedinica",tocan:!1},{odgovor:"Test sustava",tocan:!1}],kategorija:1},{id:15,pitanje:"Koje vrste projektnih zadataka postoje?",odgovori:[{odgovor:"Primitivni,skupni i prekretnice",tocan:!0},{odgovor:"Agilni, skupni i prekretnice",tocan:!1},{odgovor:"Primitivni, agilni i skupni",tocan:!1},{odgovor:"Agilni, defanzifni i primitivni",tocan:!1},{odgovor:"Skupni, defazivni i prekretnice",tocan:!1}],kategorija:1},{id:16,pitanje:"Ekstremno programiranje je:",odgovori:[{odgovor:"Agilni razvojni proces",tocan:!0},{odgovor:"Adaptivni razvojni proces",tocan:!1},{odgovor:"Defazivni razvojni proces",tocan:!1},{odgovor:"Ofanzivni razvojni proces",tocan:!1},{odgovor:"Primitivni razvojni proces",tocan:!1}],kategorija:1},{id:17,pitanje:"Nadja\u010danom \u010dlanu Postupak() razreda roditelja pristupa se naredbom:",odgovori:[{odgovor:"base.Postupak();",tocan:!0},{odgovor:"screen.Postupak()",tocan:!1},{odgovor:"this.Postupak()",tocan:!1},{odgovor:"get.Postupak()",tocan:!1},{odgovor:"set.Postupak()",tocan:!1}],kategorija:1},{id:18,pitanje:"U koju vrstu odr\u017eavanja spada pobolj\u0161anje perfomansi?",odgovori:[{odgovor:"Adaptivno",tocan:!0},{odgovor:"Defanzivno",tocan:!1},{odgovor:"Oblikovani",tocan:!1},{odgovor:"Beta testiranje",tocan:!1},{odgovor:"Using",tocan:!1}],kategorija:1},{id:19,pitanje:"U kojoj fazi \u017eivotnog ciklusa programske potpore se razvija specifikacija zahtjeva?",odgovori:[{odgovor:"Analiza",tocan:!0},{odgovor:"Testna faza",tocan:!1},{odgovor:"Proces",tocan:!1},{odgovor:"Eksperiment",tocan:!1},{odgovor:"Autentifikacija",tocan:!1}],kategorija:1},{id:20,pitanje:"Razred StringBuilder predstavlja:",odgovori:[{odgovor:"Promijenjiv niz znakova",tocan:!0},{odgovor:"Specifikaciju zahtjeva",tocan:!1},{odgovor:"Query string",tocan:!1},{odgovor:"Planiranje",tocan:!1},{odgovor:"Strukturu",tocan:!1}],kategorija:1},{id:21,pitanje:"Strukturirani dokument s detaljnim opisom o\u010dekivanog pona\u0161anja sustava namjenjen ugovarateljima i izvoditeljima razvoja a koji predstavlja nezavisan pogled na sustav se naziva:",odgovori:[{odgovor:"Specifikaciju zahtjeva",tocan:!0},{odgovor:"Promijenjiv niz znakova",tocan:!1},{odgovor:"Query string",tocan:!1},{odgovor:"Planiranje",tocan:!1},{odgovor:"Strukturu",tocan:!1}],kategorija:1},{id:22,pitanje:"U kojoj fazi \u017eivotnog ciklusa programske potpore se modeliraju procesi?",odgovori:[{odgovor:"Analiza",tocan:!0},{odgovor:"Testna faza",tocan:!1},{odgovor:"Proces",tocan:!1},{odgovor:"Eksperiment",tocan:!1},{odgovor:"Autentifikacija",tocan:!1}],kategorija:2},{id:23,pitanje:"Parovi oblika naziv=vrijednost navedeni iza upitnika u adresi neke stranice npr. p=1&q=7&user=student u adresi  \n http://apps.zpr.fer.hr/myapp/run?p=1&q=7&user=student \n Tvore pojam koji se naziva: ",odgovori:[{odgovor:"Query string",tocan:!0},{odgovor:"Link (poveznica)",tocan:!1},{odgovor:"Struktua",tocan:!1},{odgovor:"Defanzivno programiranje",tocan:!1},{odgovor:"Autenti\u010dnost",tocan:!1}],kategorija:2},{id:24,pitanje:"Koja od navedenih formi omogu\u0107ava prihvat datoteke",odgovori:[{odgovor:"<form asp-action=\u201cEdit\u201c method=\u201cpost\u201c enctype=\u201cmultipart/form-data\u201c>",tocan:!0},{odgovor:"<form asp-action=\u201cpost\u201c method=\u201cEdit\u201c enctype=\u201cmultipart/form-data\u201c>",tocan:!1},{odgovor:"<form asp-action=\u201cmultipart/form-data\u201c method=\u201cpost\u201c enctype=\u201cEdit\u201c>",tocan:!1},{odgovor:"<form asp-action=\u201cEdit\u201c method=\u201cmultipart/form-data\u201c enctype=\u201cpost\u201c>",tocan:!1},{odgovor:"<form asp-action=\u201cmultipart/form-data\u201c method=\u201cpost\u201c enctype=\u201cEdit\u201c>",tocan:!1}],kategorija:2},{id:25,pitanje:"Tehnika programiranja \u010dija je ideja da \u0107e potprogram s neispravnim podacima \u201eopstati\u201c i onda kada su pogre\u0161kom pozivaju\u0107e procedure predani neispravni argumenti,naziva se:",odgovori:[{odgovor:"Defanzivno programiranje",tocan:!0},{odgovor:"Apstrakcija",tocan:!1},{odgovor:"Ofanzivno programiranje",tocan:!1},{odgovor:"Autentifikacija",tocan:!1},{odgovor:"Nefunkcionalnost",tocan:!1}],kategorija:2},{id:26,pitanje:"Ako se unutar pogleda u MVC aplikaciji kao model koristi razred Mjesto koji ima svojstvo Naziv \u010dija se vrijednost ispituje unutar pogleda,kako izgleda odsje\u010dak takvog pogleda?",odgovori:[{odgovor:"@model Mjesto... \n @model Naziv",tocan:!0},{odgovor:"@Mjesto... \n @Naziv",tocan:!1},{odgovor:"@model Mjesto && @model Naziv",tocan:!1},{odgovor:"@Mjesto... \n @Naziv",tocan:!1},{odgovor:"@model Mjesto || @model Naziv",tocan:!1}],kategorija:2},{id:27,pitanje:"\u0160to \u0107e ispasti izvo\u0111enjem sljede\u0107eg programskog odsje\u010dka? \n \n Int a=0,b=0,c; \n Try{ \n \t Try{ \n \t Console.Write(\u201eT1 \u201c); \n \t c=b/a; \n } \n Finally{ \n \t Console.Write(\u201eF1 \u201c); \n } \n } \n Catch(Exception exc2){ \n Console.Write(\u201eE2 \u201c); \n } \n Finally{ \n Console.Write(\u201eF2 \u201c); \n }",odgovori:[{odgovor:"T1 F1 E2 F2",tocan:!0},{odgovor:"F1 E2 F2 T1",tocan:!1},{odgovor:"E2 F2 T1 F1",tocan:!1},{odgovor:"F2 T1 F1 E2",tocan:!1},{odgovor:"T1 E2 F1 F2",tocan:!1}],kategorija:2},{id:28,pitanje:"Ako u konfiguracijskoj datoteci za klijentske biblioteke(npr. bower.json ili packages.npm) \u017eelimo u budu\u0107nosti noviju verziju jQueryja sve dok ona oblika 3.minor.patch,a u trenutku postoji verzija 3.3.1 napisat cemo: ",odgovori:[{odgovor:"{ \n \t ... \n \t \u201ejQuery\u201c : \u201e^3.3.1\u201c, \n \t ... \n }",tocan:!0},{odgovor:"{ \n \t ... \n \t \u201ejQuery\u201c > \u201e^3.3.1\u201c, \n \t ... \n }",tocan:!1},{odgovor:"{ \n \t ... \n \t \u201ejQuery -> ^3.3.1\u201c, \n \t ... \n }",tocan:!1},{odgovor:"{ \n \t ... \n \t \u201ejQuery\u201c >> \u201e^3.3.1\u201c, \n \t ... \n }",tocan:!1},{odgovor:"{ \n \t ... \n \t \u201ejQuery : ^3.3.1\u201c, \n \t ... \n }",tocan:!1}],kategorija:2},{id:29,pitanje:"Operator koji stvara novu instancu razreda je:",odgovori:[{odgovor:"new",tocan:!0},{odgovor:"false",tocan:!1},{odgovor:"base",tocan:!1},{odgovor:"struct",tocan:!1},{odgovor:"int",tocan:!1}],kategorija:2},{id:30,pitanje:"Koji je od navedenih tipova podataka vrijednosni tip(value-type)?",odgovori:[{odgovor:"struct",tocan:!0},{odgovor:"base",tocan:!1},{odgovor:"new",tocan:!1},{odgovor:"set",tocan:!1},{odgovor:"get",tocan:!1}],kategorija:2},{id:31,pitanje:"U kojoj fazi \u017eivotnog ciklusa programske potpore se vr\u0161i analiza izvedivosti?",odgovori:[{odgovor:"Planiranje",tocan:!0},{odgovor:"Procesiranje",tocan:!1},{odgovor:"Razvijanje",tocan:!1},{odgovor:"Elaboriranje",tocan:!1},{odgovor:"Verificiranje",tocan:!1}],kategorija:2},{id:32,pitanje:"Ako forma izgleda nalik sljede\u0107oj: \n \n <form action=\u201cEdit\u201c method=\u201cpost\u201c> \n \t <input name=\u201cbroj\u201c valuse=\u201c1\u201c/> \n \t <input name=\u201cbroj\u201c valuse=\u201c2\u201c/> \n \t <input name=\u201cbroj\u201c valuse=\u201c3\u201c/> \n </form> \n Tada za prihvat vrijednost 1,2 i 3 akcija na upravlja\u010du treba biti definirana za sljede\u0107i na\u010din: ",odgovori:[{odgovor:"public IActionResult Edit(string[] broj) {  ...  }",tocan:!0},{odgovor:"getSelection(string[] broj) {  ...  }",tocan:!1},{odgovor:"onClick(string[] broj) {  ...  }",tocan:!1},{odgovor:"setInterval(string[] broj) {  ...  }",tocan:!1},{odgovor:"public departFocus(string[] broj) {  ...  }",tocan:!1}],kategorija:2},{id:33,pitanje:"\u0160to je od navedenog istina za zahtjeve?",odgovori:[{odgovor:"Usmjeriti se na ono \u0161to je potrebno obaviti,a ne na na\u010din realizacije.",tocan:!0},{odgovor:"Usmjeriti se na ono \u0161to je potrebtno obaviti i na na\u010din realizacije.",tocan:!1},{odgovor:"Usmjeriti se na na\u010din realizacije, a ne na ono \u0161to je potrebno obaviti.",tocan:!1},{odgovor:"Nije potrebno nikakvo usmjeravanje u cilju obavljanja i realizacije",tocan:!1},{odgovor:"Usmjeriti se na na\u010din realizacije i ako je nu\u017eno, na ono \u0161to je potrebno obaviti.",tocan:!1}],kategorija:2},{id:34,pitanje:"Ne znam to\u010dno pitanje ugl odgovor je:",odgovori:[{odgovor:"private static IserviceProvider serviceProvider; \n Public static void Main(string[] args){ \n serviceProvider = new ServiceCollection() \n \t .AddSingleton<IconnectionStringTool,ConnectionStringTool>() \n \t .AddTransient<FirmaContext, FirmaContext>() \n \t .BuildServiceProvider(); \n ... \n FirmaContext ctx = serviceProvider.GetService<FirmaContext>();",tocan:!0},{odgovor:"private static Main serviceProvider; \n Public static void Main(string[] args){ \n serviceProvider = new ServiceCollection() \n \t .AddSingleton<IconnectionStringTool,ConnectionStringTool>() \n \t .AddTransient<FirmaContext, FirmaContext>() \n \t .BuildServiceProvider(); \n ... \n FirmaContext ctx = serviceProvider.GetService<FirmaContext>();",tocan:!1},{odgovor:"public void IserviceProvider serviceProvider; \n Public static void Main(string[] args){ \n serviceProvider = new ServiceCollection() \n \t .AddSingleton<IconnectionStringTool,ConnectionStringTool>() \n \t .AddTransient<FirmaContext, FirmaContext>() \n \t .BuildServiceProvider(); \n ... \n FirmaContext ctx = serviceProvider.GetService<FirmaContext>();",tocan:!1},{odgovor:"private int IserviceProvider serviceProvider; \n Public static void Main(string[] args){ \n serviceProvider = new ServiceCollection() \n \t .AddSingleton<IconnectionStringTool,ConnectionStringTool>() \n \t .AddTransient<FirmaContext, FirmaContext>() \n \t .BuildServiceProvider(); \n ... \n FirmaContext ctx = serviceProvider.GetService<FirmaContext>();",tocan:!1},{odgovor:"private float IserviceProvider serviceProvider; \n Public static void Main(string[] args){ \n serviceProvider = new ServiceCollection() \n \t .AddSingleton<IconnectionStringTool,ConnectionStringTool>() \n \t .AddTransient<FirmaContext, FirmaContext>() \n \t .BuildServiceProvider(); \n ... \n FirmaContext ctx = serviceProvider.GetService<FirmaContext>();",tocan:!1}],kategorija:2},{id:35,pitanje:"Sponzor projekta je:",odgovori:[{odgovor:"osoba ili grupa koja osigurava resurse za projekt.",tocan:!0},{odgovor:"osoba ili grupa koja ne osigurava ni\u0161ta.",tocan:!1},{odgovor:"Coca Cola",tocan:!1},{odgovor:"osoba ili grupa koja se nalazi u svim fazama osim u fazi po\u010dinjanj",tocan:!1},{odgovor:"osoba ili grupa koja planira ali ne financira projekt.",tocan:!1}],kategorija:2},{id:36,pitanje:"Testiranje se po RUP-u odvija:",odgovori:[{odgovor:"u svim fazama osim u fazi po\u010dinjanja",tocan:!0},{odgovor:"paralelno sa elaboracijom",tocan:!1},{odgovor:"po dogovoru sa klijentima",tocan:!1},{odgovor:"petkom",tocan:!1},{odgovor:"u razvojnom procesu ",tocan:!1}],kategorija:2},{id:37,pitanje:"Neka su definirane sljede\u0107e hijerarhije: \nVozilo<- Automobil <-Elektri\u010dniAutomobil \nVozilo<- Motocikl \nOsoba<-Djelatnik<-Direktor \nI postupak Djelatnik ZaduzenZa(Automobil a) \n\u0160to je od navedenog ispravno?",odgovori:[{odgovor:"Func<ElektricniAutomobil, Osoba> func=ZaduzenZa;",tocan:!0},{odgovor:"Func<Osoba> func=ZaduzenZa;",tocan:!1},{odgovor:"Func<ElektricniAutomobil> func=ZaduzenZa;",tocan:!1},{odgovor:"Func<'ElektricniAutomobil' + 'Osoba'> func=ZaduzenZa;",tocan:!1},{odgovor:"Func<null> func=ZaduzenZa;",tocan:!1}],kategorija:2},{id:38,pitanje:"Planiranje s vrha prema dolje(Top-Down) je jedan od pristupa razvoju zadataka u fazi u kojem: ",odgovori:[{odgovor:"se identificiraju glavne faze i rezultati projekta prije dodavanja zadataka potrebnih za izvr\u0161etak tih faza.",tocan:!0},{odgovor:"se identificiraju samo glavne faze, ali ne i rezultati projekta prije dodavanja zadataka potrebnih za izvr\u0161etak tih faza.",tocan:!1},{odgovor:"se identificiraju glavne faze i rezultati projekta nakon dodavanja zadataka potrebnih za izvr\u0161etak tih faza.",tocan:!1},{odgovor:"se identificiraju sporedne faze i rezultati projekta prije dodavanja zadataka potrebnih za izvr\u0161etak tih faza.",tocan:!1},{odgovor:"se identificiraju sporedne faze i rezultati projekta nakon dodavanja zadataka potrebnih za izvr\u0161etak tih faza.",tocan:!1}],kategorija:2},{id:39,pitanje:"Prikupljanje detaljnih zahtjeva (80%) se kod RUP-a prikuplja u fazi:",odgovori:[{odgovor:"elaboracije",tocan:!0},{odgovor:"autenti\u010dnosti",tocan:!1},{odgovor:"procesa",tocan:!1},{odgovor:"razvoja",tocan:!1},{odgovor:"verifikacije",tocan:!1}],kategorija:2},{id:40,pitanje:"Za prijenos varijabilnog broja argumenata koristi se klju\u010dna rije\u010d:",odgovori:[{odgovor:"params",tocan:!0},{odgovor:"integer",tocan:!1},{odgovor:"destrakcija",tocan:!1},{odgovor:"prijenos",tocan:!1},{odgovor:"transfer",tocan:!1}],kategorija:2},{id:41,pitanje:"U koju vrstu odr\u017eavanja spada nadogradnja sustava da bi se rije\u0161ili novi problemi?",odgovori:[{odgovor:"Perfektivno",tocan:!0},{odgovor:"Adaptivno",tocan:!1},{odgovor:"Kovarijntno",tocan:!1},{odgovor:"Preventivno",tocan:!1},{odgovor:"Hibridno",tocan:!1}],kategorija:2},{id:42,pitanje:"Postupak dokazivanja da je proizvod dobro napravljen,tj. Da odgovara specifikaciji zahtjeva naziva se: ",odgovori:[{odgovor:"verifikacija",tocan:!0},{odgovor:"validacija",tocan:!1},{odgovor:"jedini\u010dno testiranje",tocan:!1},{odgovor:"logika drugog reda",tocan:!1},{odgovor:"dokaz prihvatljivosti",tocan:!1}],kategorija:2},{id:43,pitanje:"\u0160to zna\u010di da je razred parcijalan (partial class)?",odgovori:[{odgovor:"Da se pojedini dijelovi razreda mogu nalaziti u drugim datotekama.",tocan:!0},{odgovor:"Da se pojedini dijelovi razreda mogu nalaziti samo u jednoj datoteci.",tocan:!1},{odgovor:"Da pojedini dijelovi razreda prestaju raditi.",tocan:!1},{odgovor:"Da se pojedini dijelovi razreda provode testiranje poslovnih zahtjeva. ",tocan:!1},{odgovor:"Da pojedini dijelovi razreda imaju pristup ograni\u010den na razred u kojem \u010dlan nije definiran. ",tocan:!1}],kategorija:3},{id:44,pitanje:"Ako je REST servis firma oblikovan prema standardu Odata tada se artikl sa \u0161ifrom 8 nalazi na sljede\u0107oj adresi:",odgovori:[{odgovor:"http://.../firma/artikl(8)",tocan:!0},{odgovor:"http://.../firma/artikl?filterByPK(8)",tocan:!1},{odgovor:"http://.../firma/artikl?SifArtikla=8",tocan:!1},{odgovor:"http://.../firma/artikl/8",tocan:!1},{odgovor:"http://.../firma/artikl?filter=8",tocan:!1}],kategorija:3},{id:45,pitanje:"Generi\u010dko su\u010delje definirano modifikatorom out,npr public interface IEnumerable<out T> je:",odgovori:[{odgovor:"kovarijantno",tocan:!0},{odgovor:"generirano",tocan:!1},{odgovor:"vi\u0161efunkcionalno",tocan:!1},{odgovor:"perfektivno",tocan:!1},{odgovor:"preventivno",tocan:!1}],kategorija:3},{id:46,pitanje:"Koja razina va\u017enosti zapisa se koristi za evidentiranje pogre\u0161aka koje se ne mogu obraditi te predstavljaju kriti\u010dnu pogre\u0161ku za odre\u0111eni postupak ali ne i za cijelu aplikaciju(npr. pogre\u0161ka prilikom dodavanja podatka u bazu)?",odgovori:[{odgovor:"Error",tocan:!0},{odgovor:"Int",tocan:!1},{odgovor:"Verifikacija",tocan:!1},{odgovor:"Trace",tocan:!1},{odgovor:"Context",tocan:!1}],kategorija:3},{id:47,pitanje:"Prilikom upravljanja zahtjeva o usvajanju zahtjeva i postavljanju prioriteta i rokova odlu\u010duje:",odgovori:[{odgovor:"Odbor za promjene(Change control board)",tocan:!0},{odgovor:"Odbor za razmjenu podataka",tocan:!1},{odgovor:"Odbor za brojeve koji odre\u0111uju verziju assembly-a",tocan:!1},{odgovor:"Odbor hibridne aplikacije",tocan:!1},{odgovor:"Odbor za testiranje poslovnih zahtjeva",tocan:!1}],kategorija:3},{id:48,pitanje:"Ako je zadano: \nInt x; \nString s=\u201c123\u201c; \nVrijednost 123 \u0107emo pospremiti u x na sljede\u0107i na\u010din: ",odgovori:[{odgovor:"x = int.Parse(s);",tocan:!0},{odgovor:"x = float.Parse(s);",tocan:!1},{odgovor:"x = float.Parse();",tocan:!1},{odgovor:"x = int.Parse();",tocan:!1},{odgovor:"x = Parse(s);",tocan:!1}],kategorija:3},{id:49,pitanje:"Semantic versioning kojeg,izme\u0111u ostalih koristi i .NET Core za ozna\u010davanje verzije objektivne datoteke ima oblik:",odgovori:[{odgovor:"major.minor.patch-sufix",tocan:!0},{odgovor:"minor.major.patch-sufix",tocan:!1},{odgovor:"sufix.patch.major-minor",tocan:!1},{odgovor:"major.sufix.patch-minor",tocan:!1},{odgovor:"patch.sufix.major-minor",tocan:!1}],kategorija:3},{id:50,pitanje:"Koja razina va\u017enosti zapisa se koristi za bilje\u017eenje malih koraka izvo\u0111enja programa i ispis informacija namjenjenih programeru u cilju lak\u0161eg rje\u0161avanja problema?",odgovori:[{odgovor:"Trace",tocan:!0},{odgovor:"Parse",tocan:!1},{odgovor:"Major",tocan:!1},{odgovor:"Context",tocan:!1},{odgovor:"Array",tocan:!1}],kategorija:3},{id:51,pitanje:"Koji je od navedenih tipova podataka vrijednosni tip(value-type)?",odgovori:[{odgovor:"int",tocan:!0},{odgovor:"float",tocan:!1},{odgovor:"array",tocan:!1},{odgovor:"struct",tocan:!1},{odgovor:"void",tocan:!1}],kategorija:3},{id:52,pitanje:"U koju vrstu odr\u017eavanja spada za\u0161tita od mogu\u0107ih problema?",odgovori:[{odgovor:"Preventivno",tocan:!0},{odgovor:"Perfektivno",tocan:!1},{odgovor:"Planirano",tocan:!1},{odgovor:"Skupno",tocan:!1},{odgovor:"Primitivno",tocan:!1}],kategorija:3},{id:53,pitanje:"Major version,minor version,build numbers i revision su:",odgovori:[{odgovor:"brojevi koji odre\u0111uju verziju assembly-a",tocan:!0},{odgovor:"na\u010dini definiranje vi\u0161efunkcionalnih komponenti",tocan:!1},{odgovor:"primjeri anonimnog razreda sa odre\u0111enim svojstvima",tocan:!1},{odgovor:"metode odre\u0111ivanja programskog odsje\u010dka",tocan:!1},{odgovor:"na\u010dini kreiranja Entity Framework modela",tocan:!1}],kategorija:3},{id:54,pitanje:"Koji od navedenih pojmova nije neka vrsta aplikacije?",odgovori:[{odgovor:"Hibridna aplikacija",tocan:!0},{odgovor:"Testna aplikacija",tocan:!1},{odgovor:"Scenska aplikacija",tocan:!1},{odgovor:"Preventivna aplikacija",tocan:!1},{odgovor:"Umetnuta aplikacija",tocan:!1}],kategorija:3},{id:55,pitanje:"U in\u017eenjerstvu zahtjeva neformalni opis zami\u0161ljene interakcije korisnika i sustava naziva se:",odgovori:[{odgovor:"scenarij",tocan:!0},{odgovor:"prevencija",tocan:!1},{odgovor:"barikada",tocan:!1},{odgovor:"indekser",tocan:!1},{odgovor:"revizija",tocan:!1}],kategorija:3},{id:56,pitanje:"Ako postoji barikada ,tvrdnje i obrada iznimki trebaju biti kori\u0161tene na na\u010din da:",odgovori:[{odgovor:"se obrade iznimki nalaze u postpucima s vanjske strane barikade,a tvrdnje u postpucima s unutarnje strane barikade.",tocan:!0},{odgovor:"se obrade iznimki nalaze u prijenosima s unutarnje strane barikade,a tvrdnje u postpucima s unutarnje strane barikade.",tocan:!1},{odgovor:"se obrade iznimki nalaze u postpucima s unutarnje strane barikade,a tvrdnje u prijenosima s unutarnje strane barikade.",tocan:!1},{odgovor:"se obrade iznimki nalaze u postpucima s vanjske strane barikade,a tvrdnje u postpucima s vanjske strane barikade.",tocan:!1},{odgovor:"se obrade iznimki nalaze u postpucima s unutarnje strane barikade,a tvrdnje u postpucima s unutarnje strane barikade.",tocan:!1}],kategorija:3},{id:57,pitanje:"\u0160to od navedenog nije korak konverzije sustava?",odgovori:[{odgovor:"Prestanak rada starog sustava",tocan:!0},{odgovor:"Testiranje poslovnih zahtjeva",tocan:!1},{odgovor:"Funkcionalno testiranje (black box testing)",tocan:!1},{odgovor:"Agilni razvojni proces",tocan:!1},{odgovor:"Team buildig",tocan:!1}],kategorija:3},{id:58,pitanje:"Poslovni zahtjevi odgovaraju na pitanje:",odgovori:[{odgovor:"za\u0161to",tocan:!0},{odgovor:"kako",tocan:!1},{odgovor:"gdje",tocan:!1},{odgovor:"\u0161to",tocan:!1},{odgovor:"kuda",tocan:!1}],kategorija:3},{id:59,pitanje:"\u0160to od navedenog ne spada u integracijsko testiranje?",odgovori:[{odgovor:"Testiranje poslovnih zahtjeva",tocan:!0},{odgovor:"Prestanak rada starog sustava",tocan:!1},{odgovor:"Funkcionalno testiranje (black box testing)",tocan:!1},{odgovor:"Agilni razvojni proces",tocan:!1},{odgovor:"Team buildig",tocan:!1}],kategorija:3},{id:60,pitanje:"Funkcionalni zahtjevi odgovaraju na pitanje:",odgovori:[{odgovor:"\u0161to",tocan:!0},{odgovor:"za\u0161to",tocan:!1},{odgovor:"kako",tocan:!1},{odgovor:"gdje",tocan:!1},{odgovor:"kuda",tocan:!1}],kategorija:3},{id:61,pitanje:"Kojeg je tipa referenca x u sljede\u0107em programskom odsje\u010dku? \n\nUsing(var context= new FirmaContext()){ \n\tVar x = context.Artikl \n\t\t.select(a=>new { \n\t\ta.SifArtikla,a.NazArtikla,a.CijArtikla, \n\t}) \n\t.First(); \n\t...",odgovori:[{odgovor:"primjerak anonimnog razreda sa svojstvima NazArtikla,CijArtikla i SifArtikla.",tocan:!0},{odgovor:"artikl kojem su popunjene vrijednosti SifArtikla, NazArtikla, CijArtikla, a ostale imaju pretpostavljene vrijednosti za svoje tipove",tocan:!1},{odgovor:"IEnumerable<T>, gdje je T anonimni razred sa svojstvima NazArtikla, CijArtikla i SifArtikla",tocan:!1},{odgovor:"artikl kojem su popunjene vrijednosti SifArtikla, NazArtikla, CijArtikla, a ostale su null",tocan:!1},{odgovor:"IEnumerable",tocan:!1}],kategorija:3},{id:62,pitanje:"Uz predani model MVC pogledu se upravlja\u010da mogu prenijeti vrijednosti koriste\u0107i:",odgovori:[{odgovor:"ViewData i/ili ViewBag",tocan:!0},{odgovor:"Team building",tocan:!1},{odgovor:"Defanzivno programiranje",tocan:!1},{odgovor:"Code First",tocan:!1},{odgovor:"XML shemu",tocan:!1}],kategorija:3},{id:63,pitanje:"Testiranje u kojem se provjerava \u0161to cijelina radi,to jest zadovoljava li zahtjeve pri \u010demu se probni slu\u010dajevi izvode iz  specifikacija naziva se: ",odgovori:[{odgovor:"funkcionalno testiranje(black box testing)",tocan:!0},{odgovor:"agilni razvojni proces",tocan:!1},{odgovor:"Code First",tocan:!1},{odgovor:"ViewData i/ili ViewBag",tocan:!1},{odgovor:"array",tocan:!1}],kategorija:3},{id:64,pitanje:"Na\u010din kreiranja Entity Framework modela u kojem je model opisan kroz rulno napisane razrede(bez grafi\u010dkog su\u010delja),a baza podataka nastaje na osnovu modela naziva se: ",odgovori:[{odgovor:"Code First",tocan:!0},{odgovor:"Ofanzivno programiranje",tocan:!1},{odgovor:"Team building",tocan:!1},{odgovor:"Objektno programiranje",tocan:!1},{odgovor:"Defanzivno programiranje",tocan:!1}],kategorija:4},{id:65,pitanje:"Ekstremno programiranje je:",odgovori:[{odgovor:"agilni razvojni proces.",tocan:!0},{odgovor:"tehnika programiranja koja se temelji na objektima koji komuniciraju porukama.",tocan:!1},{odgovor:"primjerak anonimnog razreda sa odre\u0111enim svojstvima.",tocan:!1},{odgovor:"umetnuta aplikacija.",tocan:!1},{odgovor:"programska cjelina.",tocan:!1}],kategorija:4},{id:66,pitanje:"U koju vrstu odr\u017eavanja spada redovita izrada sigurnosnih kopija?",odgovori:[{odgovor:"Preventivno",tocan:!0},{odgovor:"Trace",tocan:!1},{odgovor:"Ekstremno",tocan:!1},{odgovor:"Hibridno",tocan:!1},{odgovor:"Kovarijantno",tocan:!1}],kategorija:4},{id:67,pitanje:"Koji je od navedenih tipova podataka tip reference(reference type)?",odgovori:[{odgovor:"array",tocan:!0},{odgovor:"team building",tocan:!1},{odgovor:"XML shema",tocan:!1},{odgovor:"var",tocan:!1},{odgovor:"context",tocan:!1}],kategorija:4},{id:68,pitanje:"U in\u017eenjerstvu zahtjeva,neformalni opis zami\u0161ljene interakcije korisnika i sustava naziva se:",odgovori:[{odgovor:"scenarij",tocan:!0},{odgovor:"revizija",tocan:!1},{odgovor:"promjena",tocan:!1},{odgovor:"funkcija",tocan:!1},{odgovor:"destrakcija",tocan:!1}],kategorija:4},{id:69,pitanje:"\u0160to od navedenog nije na\u010din prikupljanja zahtjeva?",odgovori:[{odgovor:"Team building",tocan:!0},{odgovor:"XML shema",tocan:!1},{odgovor:"Dokumentacija",tocan:!1},{odgovor:"Code First",tocan:!1},{odgovor:".NET",tocan:!1}],kategorija:4},{id:70,pitanje:"WSDL ozna\u010dava:",odgovori:[{odgovor:"XML shemu za opis web servisa.",tocan:!0},{odgovor:"opis zami\u0161ljene interakcije korisnika i sustava",tocan:!1},{odgovor:"izradu sigurnosnih kopija.",tocan:!1},{odgovor:"model opisan kroz rulno napisane razrede",tocan:!1},{odgovor:"postupke s vanjske strane barikade.",tocan:!1}],kategorija:4},{id:71,pitanje:"Koje vrste resursa postoje?",odgovori:[{odgovor:"Ljudski i materijalni",tocan:!0},{odgovor:"Tehnolo\u0161ki i materijalni",tocan:!1},{odgovor:"Tehnolo\u0161ki i objektni",tocan:!1},{odgovor:"Promjenjivi i fiksni",tocan:!1},{odgovor:"Fiksni i ljudski",tocan:!1}],kategorija:4},{id:72,pitanje:"\u0160to ispisuje sljede\u0107i programski odsje\u010dak? \n\nStatic void Main(string[] args){ \nAction<int, string, Funcc<char, string, int>> action =(i, s, f)=> Console.WriteLine(F(s[i],s)); \nAction(6,  \u201eispit iz RPPP-a,(x,s)=> \n{ \n\tInt suma = 0; \n\tForeach(var c in s) \n\t{ if(x == c) ++sum; \n} return sum; \n}); \n}",odgovori:[{odgovor:"3",tocan:!0},{odgovor:"0",tocan:!1},{odgovor:"NaN",tocan:!1},{odgovor:"1",tocan:!1},{odgovor:"2",tocan:!1}],kategorija:4},{id:73,pitanje:"Kako se zove tehnika programiranja koja se temelji na objektima koji komuniciraju porukama?",odgovori:[{odgovor:"Objektno programiranje",tocan:!0},{odgovor:"Defanzivno programiranje",tocan:!1},{odgovor:"Ofanzivno programiranje",tocan:!1},{odgovor:"Hibridno programiranje",tocan:!1},{odgovor:"Umetnuto programiranje",tocan:!1}],kategorija:4},{id:74,pitanje:"Ako Automobil i Motocikl naslje\u0111uju MotornoVozilo i ako je su\u010delje Icomparer definirano kao: \nPublic interface Ienumerable< out T> tada se postupku: \nVoid IspisiVozila(IEnumerable<MotornoVozilo> vozila) { \nFor(var vozilo in vozila) \n\tConsole-WriteLine(vozilo.Model); \n}\nKao argument mo\u017ee poslati objekt tipa",odgovori:[{odgovor:"List<Automobil>",tocan:!0},{odgovor:"List<MotornoVozilo>",tocan:!1},{odgovor:"List<vozilo>",tocan:!1},{odgovor:"List<vozilo.model>",tocan:!1},{odgovor:"List<Icomparer>",tocan:!1}],kategorija:4},{id:75,pitanje:"Koje su vrste zahtjeva?",odgovori:[{odgovor:"Poslovni, korisni\u010dki, funkcionalni, nefunkcionalni",tocan:!0},{odgovor:"Poslovni, privatni, funkcionalni",tocan:!1},{odgovor:"Privatni, trajni, prolazni, socijalni",tocan:!1},{odgovor:"Funkcionalni, edukativni, adaptivni, korisni\u010dki",tocan:!1},{odgovor:"Trajni, prolazni, socijalni, adaptivni",tocan:!1}],kategorija:4},{id:76,pitanje:"Kojeg je tipa referenca x u sljede\u0107em programskom odsje\u010dku? \n\nusing(var context = new FirmaContext()){ \n\tvar x = context.Artikl \n\t\t.Select(a => new{ \n\t\ta.SifArtikla,a.NazArtikla,a.CijArtikla, \n}) \n.First(); \n}...",odgovori:[{odgovor:"primjerak anonimnog razreda sa svojstvima NazArtikla,CijArtikla i SifArtikla.",tocan:!0},{odgovor:"primjerak anonimnog razreda sa svojstvima var contexta.",tocan:!1},{odgovor:"primjerak anonimnog razreda sa svojstvima FirmaContext().",tocan:!1},{odgovor:"primjerak anonimnog razreda sa svojstvima contect.Artikl.",tocan:!1},{odgovor:"primjerak anonimnog razreda sa svojstvima First().",tocan:!1}],kategorija:4},{id:77,pitanje:"Paralelno uvo\u0111enje novog sustava u primjenu ima",odgovori:[{odgovor:"Nizak rizik,visok tro\u0161ak i dugo trajanje",tocan:!0},{odgovor:"Srednji rizik,srednji tro\u0161ak i dugo trajanje",tocan:!1},{odgovor:"Velik rizik, velik tro\u0161ak i dugo trajanje",tocan:!1},{odgovor:"Srednji rizik, visok tro\u0161ak i kratko trajanje",tocan:!1},{odgovor:"Srednji rizik, srednji tro\u0161ak i kratko trajanje",tocan:!1}],kategorija:4},{id:78,pitanje:"Koncept definiranja dijelova softvera koji \u0107e rukovati prljavim podacima i drugih koji rukuju samo \u010distim podacima naziva se",odgovori:[{odgovor:"Barikada",tocan:!0},{odgovor:"Prevencija",tocan:!1},{odgovor:"Proces",tocan:!1},{odgovor:"planiranje",tocan:!1},{odgovor:"Pristup",tocan:!1}],kategorija:4},{id:79,pitanje:"Koja od navedenih pojmova nije vrsta aplikacije?",odgovori:[{odgovor:"Umetnuta aplikacija",tocan:!0},{odgovor:"Hibridna aplikacija",tocan:!1},{odgovor:"Preventivna aplikacija",tocan:!1},{odgovor:"Testna aplikacija",tocan:!1},{odgovor:"Scenska aplikacija",tocan:!1}],kategorija:4},{id:80,pitanje:"Koja od navedenih tvrdnji nije to\u010dna?",odgovori:[{odgovor:"private varijable i postupci se naslje\u0111uju",tocan:!0},{odgovor:"Barikada je koncept definiranja dijelova softvera",tocan:!1},{odgovor:"Objektno programiranje se temelji na objektima",tocan:!1},{odgovor:"WSDL ozna\u010dava XML shemu za opis web servisa",tocan:!1},{odgovor:"Ekstremno programiranje je agilni razvojni proces",tocan:!1}],kategorija:4},{id:81,pitanje:"Specifikacija sustava izlaz je koje faze(\u017eivotnog ciklusa)?",odgovori:[{odgovor:"Oblikovanja",tocan:!0},{odgovor:"Procesa",tocan:!1},{odgovor:"Testiranja",tocan:!1},{odgovor:"Planirnaja",tocan:!1},{odgovor:"Razvoja",tocan:!1}],kategorija:4},{id:82,pitanje:"83.\tAko je u datoteci Startup.cs ASP.NET Core aplikacije u postupku Configure definirana sljede\u0107a ruta: \n\nApp.UseMvc(routes => { \n\tRoutes.MapRoute{ \n\t\tName:\u201cdefault\u201c, \n\t\tTemplate: \u201e{controller=Home}/{action=Index}/{id}\u201c); \n\t} \n}; \n\nKako izgleda zadnji odsje\u010dak url adrese koja bi odgovarala sljede\u0107em postupku iz datoteke MjestoController.cs \nPublic ActionResult Edit(int id, int page,  int sort)(....) \nPri \u010demu \u0107e vrijednosti id,page i sort treba poslati vrijednost 1,2 i 3",odgovori:[{odgovor:".../Mjesto/Edit/1?page=2&sort=3",tocan:!0},{odgovor:".../Mjesto/Edit/3?sort=2&page=1",tocan:!1},{odgovor:".../Mjesto/Edit/2?page=3&sort=1",tocan:!1},{odgovor:".../Mjesto/Edit/1?sort=3&page=2",tocan:!1},{odgovor:".../Mjesto/Edit/2?sort=1&page=3",tocan:!1}],kategorija:4},{id:83,pitanje:"Koji od navedenih \u010dlanova razreda mogu imati mehanizme get i set?",odgovori:[{odgovor:"Svojstva i indekseri",tocan:!0},{odgovor:"Objekti i svojstva",tocan:!1},{odgovor:"Svojstva i funkcije",tocan:!1},{odgovor:"Objekti i indekseri",tocan:!1},{odgovor:"Objektni i funkcije",tocan:!1}],kategorija:4},{id:84,pitanje:"U MVC aplikaciji atributi [HttpGet] i [HttpPost] iznad postupka u upravlja\u010du slu\u017ee:",odgovori:[{odgovor:"da bi razlikovali inicijalno otvaranje forme od naknadnog slanja podataka.",tocan:!0},{odgovor:"da bi iznimke koristili samo u fazi razvoja.",tocan:!1},{odgovor:"da bi dokument kojim pokreta\u010d projekta odobri projekt.",tocan:!1},{odgovor:"za izravno uvo\u0111enje novog sustava u primjenu",tocan:!1},{odgovor:"da bi private modifikator mogao pristupiti razredima i \u010dlanovima razreda.",tocan:!1}],kategorija:4},{id:85,pitanje:"\u0160to od navedenog nije preporuka za kori\u0161tenje iznimki?",odgovori:[{odgovor:"Iznimke koristiti samo u fazi razvoja(tj. U debug verziji aplikacije)",tocan:!0},{odgovor:"Iznimke koristiti u fazi \u017eivotnog ciklusa",tocan:!1},{odgovor:"Iznimke koristiti u MVC aplikaciji",tocan:!1},{odgovor:"Iznimke koristiti samo u fazi testiranja",tocan:!1},{odgovor:"Iznimke koristiti samo pri upotrebi aplikacije",tocan:!1}],kategorija:5},{id:86,pitanje:"U kojoj fazi \u017eivotnog ciklusa programske potpore se vr\u0161i analiza izvedivosti?",odgovori:[{odgovor:"Planiranje",tocan:!0},{odgovor:"Testiranje",tocan:!1},{odgovor:"Procesiranje",tocan:!1},{odgovor:"Razvijanje",tocan:!1},{odgovor:"Beta testiranje",tocan:!1}],kategorija:5},{id:87,pitanje:"Probna uporaba koju provode korisnici kod sebe bez nazo\u010dnosti izvo\u0111a\u0107a naziva se:",odgovori:[{odgovor:"Beta testiranje",tocan:!0},{odgovor:"Razvijanje",tocan:!1},{odgovor:"Procesiranje",tocan:!1},{odgovor:"Testiranje",tocan:!1},{odgovor:"Planiranje",tocan:!1}],kategorija:5},{id:88,pitanje:"\u0160to od navedenog nije jedno od 4 osnovna pravila servisno orijentirane arhitekture?",odgovori:[{odgovor:"Brzina i mala koli\u010dina podataka",tocan:!0},{odgovor:"Ugovor, a ne implementacija",tocan:!1},{odgovor:"Jasno odre\u0111ene granice",tocan:!1},{odgovor:"Neovisnost servisa",tocan:!1},{odgovor:"Semantika, a ne samo sintaksa",tocan:!1}],kategorija:5},{id:89,pitanje:"Kojom se klju\u010dnom rije\u010di u nekom projektu uklju\u010duje prostor imena?",odgovori:[{odgovor:"using",tocan:!0},{odgovor:"get",tocan:!1},{odgovor:"set",tocan:!1},{odgovor:"console",tocan:!1},{odgovor:"this",tocan:!1}],kategorija:5},{id:90,pitanje:"Koji tipovi pitanja postoje u intervjuu?",odgovori:[{odgovor:"otvorena, zatvorena, probna",tocan:!0},{odgovor:"po\u010detna, zavr\u0161na, probna",tocan:!1},{odgovor:"izravna, neizravna, neo\u010dekivana",tocan:!1},{odgovor:"planirana, neplanirana, odgovorena",tocan:!1},{odgovor:"kratka, duga, srednja",tocan:!1}],kategorija:5},{id:91,pitanje:"Povelja projekta je:",odgovori:[{odgovor:"Dokument kojim pokreta\u010d projekta ili sponzor odobrava projekt.",tocan:!0},{odgovor:"Dokument kojim pokreta\u010d projekta ili sponzor analizira projekt.",tocan:!1},{odgovor:"Dokument kojim pokreta\u010d projekta ili sponzor planira projekt.",tocan:!1},{odgovor:"Dokument kojim pokreta\u010d projekta ili sponzor odbija projekt.",tocan:!1},{odgovor:"Dokument kojim pokreta\u010d projekta ili sponzor pauziraju projekt.",tocan:!1}],kategorija:5},{id:92,pitanje:"\u0160to od navedenog ne spada u verifikaciju zahtjeva?",odgovori:[{odgovor:"Komentiranje koda",tocan:!0},{odgovor:"Definiranje funkcija",tocan:!1},{odgovor:"Inicijalizacija",tocan:!1},{odgovor:"Verificiranje",tocan:!1},{odgovor:"Elaboriranje",tocan:!1}],kategorija:5},{id:93,pitanje:"10% najva\u017enijih zahtjeva se kod RUP-a prikuplja u fazi?",odgovori:[{odgovor:"Razvoja",tocan:!0},{odgovor:"Procesa",tocan:!1},{odgovor:"Testiranja",tocan:!1},{odgovor:"Beta testiranja",tocan:!1},{odgovor:"Planiranja",tocan:!1}],kategorija:5},{id:94,pitanje:"Izravno uvo\u0111enje novog sustava u primjenu ima?",odgovori:[{odgovor:"Visok rizik,nizak tro\u0161ak(ako uspije) i kratko trajanje (ako uspije)",tocan:!0},{odgovor:"Nizak rizik,nizak tro\u0161ak(ako uspije) i kratko trajanje (ako uspije)",tocan:!1},{odgovor:"Visok rizik,visok tro\u0161ak(ako uspije) i dugo trajanje (ako uspije)",tocan:!1},{odgovor:"Nizak rizik,nizak tro\u0161ak(ako uspije) i kratko trajanje (ako uspije)",tocan:!1},{odgovor:"Visok rizik,nizak tro\u0161ak(ako uspije) i dugo trajanje (ako uspije)",tocan:!1}],kategorija:5},{id:95,pitanje:"Private modifikator pristupa razredima i \u010dlanovima razreda ozna\u010dava:",odgovori:[{odgovor:"Pristup ograni\u010den na razred u kojem je \u010dlan definiran",tocan:!0},{odgovor:"Pristup ograni\u010den na klasu u kojoj je razred definiran",tocan:!1},{odgovor:"Pristup ograni\u010den na komponentu u kojem je \u010dlan definiran",tocan:!1},{odgovor:"Pristup ograni\u010den na komponentu u kojem je razred definiran",tocan:!1},{odgovor:"Pristup ograni\u010den na klasu u kojoj je definirano vi\u0161e razreda",tocan:!1}],kategorija:5},{id:96,pitanje:"\u0160to od navedenog nije mogu\u0107e?",odgovori:[{odgovor:"var x;",tocan:!0},{odgovor:"int x;",tocan:!1},{odgovor:"float x;",tocan:!1},{odgovor:"x[]",tocan:!1},{odgovor:"double",tocan:!1}],kategorija:5},{id:97,pitanje:"Test kojeg provode nezavisne tvrtke ili odjeli za osiguranje kvalitete,a provodi se opcionalno kao potvrda da je sustav gotov i spreman za primjenu naziva se:",odgovori:[{odgovor:"Nadzorni test(audit test)",tocan:!0},{odgovor:"Sigurnosni test(security test)",tocan:!1},{odgovor:"Beta test",tocan:!1},{odgovor:"Alfa test",tocan:!1},{odgovor:"Test kvalitete(quality test)",tocan:!1}],kategorija:5},{id:98,pitanje:"Ako je u bazi podataka odnos me\u0111u tablicama Drzava i Mjesto kao na sljede\u0107oj slici tada razred Mjesto u Entitiy Frameworku modelu generiranom prema navedenoj BP izgleda nalik:",odgovori:[{odgovor:"public partial class Mjesto { \n\t... \n\tPublic string OznDrzave ( get; set; ) \n\t... \n\tPublic Drzava OznDrzaveNavigation ( get; set; )\n}",tocan:!0},{odgovor:"public partial class OznDrzave { \n\t... \n\tPublic string OznDrzave ( get; set; ) \n\t... \n\tPublic Drzava OznDrzaveNavigation ()\n}",tocan:!1},{odgovor:"public partial class Mjesto { \n\t... \n\tPublic string OznDrzave () \n\t... \n\tPublic Drzava OznDrzaveNavigation ( get; set; )\n}",tocan:!1},{odgovor:"public partial class Drzava { \n\t... \n\tPublic string OznDrzave () \n\t... \n\tPublic Drzava OznDrzaveNavigation ( get; set; )\n}",tocan:!1},{odgovor:"public partial class Mjesto { \n\t... \n\tPublic string OznDrzave ( get; set; ) \n\t... \n\tPublic Drzava OznDrzaveNavigation ()\n}",tocan:!1}],kategorija:5},{id:99,pitanje:"Verzija konfiguracije koja se koristi umjesto originalne verzije i podrazumijeva izmjene nastale kroz vrijeme naziva se?",odgovori:[{odgovor:"Revizija",tocan:!0},{odgovor:"Elaboracija",tocan:!1},{odgovor:"Verifikacija",tocan:!1},{odgovor:"Programska cjelina",tocan:!1},{odgovor:"Potprogram",tocan:!1}],kategorija:5},{id:100,pitanje:"Skup programskih naredbi koje obavljaju jedan zadatak ili jedan dio zadatka,npr. glavni program,potprogram,se zove:",odgovori:[{odgovor:"Programska cjelina",tocan:!0},{odgovor:"Potprogram",tocan:!1},{odgovor:"Verifikacija",tocan:!1},{odgovor:"Elaboracija",tocan:!1},{odgovor:"Revizija",tocan:!1}],kategorija:5},{id:101,pitanje:"U koju vrstu odr\u017eavanja spada ugradnja novih mogu\u0107nosti?",odgovori:[{odgovor:"Perfektivno",tocan:!0},{odgovor:"Plansko",tocan:!1},{odgovor:"Razvojno",tocan:!1},{odgovor:"Testno",tocan:!1},{odgovor:"Programsko",tocan:!1}],kategorija:5},{id:102,pitanje:"U kojoj fazi ekstremnog programiranja korisnici bilje\u017ee svoje pri\u010de na kartice,a svaka kartica sadr\u017ei jednu mogu\u0107nost programa?",odgovori:[{odgovor:"U fazi istra\u017eivanja",tocan:!0},{odgovor:"U fazi testiranja",tocan:!1},{odgovor:"U fazi razvijanja",tocan:!1},{odgovor:"U fazi verificiranja",tocan:!1},{odgovor:"U fazi ekspanzije",tocan:!1}],kategorija:5},{id:103,pitanje:"\u0160to je programsko in\u017eenjerstvo?",odgovori:[{odgovor:"Sistemati\u010dan,discipliniran i mjerljiv pristup razvoju,primjeni i odr\u017eavanju softvera.",tocan:!0},{odgovor:"Verzija konfiguracije koja se koristi umjesto originalne verzije.",tocan:!1},{odgovor:"Skup programskih naredbi koje obavljaju jedan zadatak ili jedan dio zadatka.",tocan:!1},{odgovor:"In\u017eenjerstvo kojeg provode nezavisne tvrtke ili odjeli za osiguranje kvalitete.",tocan:!1},{odgovor:"Koncept definiranja dijelova softvera koji \u0107e rukovati prljavim podacima.",tocan:!1}],kategorija:5},{id:104,pitanje:"Mogu\u0107nost poziva postupka istog imena na objektima razli\u010ditih razreda naziva se:",odgovori:[{odgovor:"Vi\u0161eobli\u010dje",tocan:!0},{odgovor:"Vi\u0161efunkcionalnost",tocan:!1},{odgovor:"Destraktiranje",tocan:!1},{odgovor:"Verifikacija",tocan:!1},{odgovor:"Beta poziv",tocan:!1}],kategorija:5},{id:105,pitanje:"\u0160to od navedenog nije to\u010dno za koncept Code First from existing database?",odgovori:[{odgovor:"Za Code First from existing database potrebno je koristiti grafi\u010dko su\u010delje",tocan:!0},{odgovor:"Razredi se mogu stvoriti ru\u010dno ili nekim od generatora",tocan:!1},{odgovor:"Baza podataka opisuje se razredima, ali ne uzrokuje stvaranje nove baze podataka",tocan:!1},{odgovor:"Code First from existing database je sli\u010dan konceptu Code First, ali radi s postoje\u0107om bazom podataka",tocan:!1},{odgovor:"Code First from existing database koristi tehniku reverznog in\u017eenjerstva",tocan:!1}],kategorija:5},{id:106,pitanje:"Koja tvrdnja ne vrijedi za klasi\u010dni vodopadni model?",odgovori:[{odgovor:"Iterativan postupak razvoja",tocan:!0},{odgovor:"Problemi u slu\u010daju pogre\u0161aka ili novih/promijenjenih zahtjeva",tocan:!1},{odgovor:"Razvoj zapo\u010dinje tek kad su svi zahtjevi dobro dokumentirani",tocan:!1},{odgovor:"Slijedno napredovanje iz faze u fazu",tocan:!1},{odgovor:"Nisu dozvoljene naknadne promjene rezultata prethodnih faza",tocan:!1}],kategorija:6},{id:107,pitanje:"Koja od navedenih tvrdnji NIJE istinita?",odgovori:[{odgovor:"Isti naziv tipa ne smije se upotrijebiti u razli\u010ditim prostorima imena.",tocan:!0},{odgovor:"Prostor imena sadr\u017ei definicije razreda, struktura, su\u010delja, pobrojanih tipova, delegata i deklaraciju drugih prostora imena.",tocan:!1},{odgovor:"C# program se mo\u017ee sastojati od vi\u0161e datoteka.",tocan:!1},{odgovor:"Isti prostor imena mo\u017ee se protezati u vi\u0161e datoteka.",tocan:!1},{odgovor:"Svaka datoteka sadr\u017ei jedan ili vi\u0161e prostora imena.",tocan:!1}],kategorija:6},{id:108,pitanje:"Zajedni\u010dki sustav tipova podataka .NET Frameworka naziva se:",odgovori:[{odgovor:"Common Type System",tocan:!0},{odgovor:"Assembly",tocan:!1},{odgovor:"Common Language Runtime",tocan:!1},{odgovor:"Base Class Library",tocan:!1},{odgovor:"Intermediate Language",tocan:!1}],kategorija:6},{id:109,pitanje:"'Parser \u0107e brzo generirati izvje\u0161\u0107e o pogre\u0161kama HTML oznaka, koje omogu\u0107ava brzi ispravak pogre\u0161aka kada program koriste po\u010detnici u HTML-u.' Ovo je primjer:",odgovori:[{odgovor:"neodre\u0111enog zahtjeva",tocan:!0},{odgovor:"nepotpunog zahtjeva",tocan:!1},{odgovor:"zahtjeva krajnjih korisnika",tocan:!1},{odgovor:"neostvarivog zahtjeva",tocan:!1},{odgovor:"zahtjeva vlasnika sustava",tocan:!1}],kategorija:6},{id:110,pitanje:"Zahtjevi koji opisuju zadatke koje korisnik mora mo\u0107i obaviti slu\u017ee\u0107i se aplikacijama su:",odgovori:[{odgovor:"korisni\u010dki",tocan:!0},{odgovor:"funkcionalni",tocan:!1},{odgovor:"poslovni",tocan:!1},{odgovor:"obvezni",tocan:!1},{odgovor:"nefunkcionalni",tocan:!1}],kategorija:6},{id:111,pitanje:"Uz predani model MVC pogledu se iz upravlja\u010da mogu prenijeti vrijednosti koriste\u0107i",odgovori:[{odgovor:"ViewData i/ili ViewBag",tocan:!0},{odgovor:"ModelData",tocan:!1},{odgovor:"HtmlData i/ili HtmlCache",tocan:!1},{odgovor:"CurrentContent i/ili PermanentContent",tocan:!1},{odgovor:"Attributes",tocan:!1}],kategorija:6},{id:112,pitanje:"Ako se unutar pogleda u MVC aplikaciji kao model koristi razred Mjesto koji ima svojstvo Naziv \u010dija se vrijednost ispisuje unutar pogleda, kako izgleda odsje\u010dak takvog pogleda?",odgovori:[{odgovor:"@model Mjesto ... \n@Model.Naziv",tocan:!0},{odgovor:"@Model Mjesto ... \n@model.Naziv",tocan:!1},{odgovor:"@model Mjesto ... \n@Naziv",tocan:!1},{odgovor:"@Model Mjesto ... \n@Naziv",tocan:!1},{odgovor:"@model Mjesto ... \n@Mjesto.Naziv",tocan:!1}],kategorija:6},{id:113,pitanje:"Parcijalni razred je razred",odgovori:[{odgovor:"\u010dija definicija mo\u017ee biti napisana u vi\u0161e datoteka.",tocan:!0},{odgovor:"koji sadr\u017ei samo popis postupaka.",tocan:!1},{odgovor:"koji se ne mo\u017ee instancirati",tocan:!1},{odgovor:"koji je napisan u nekoliko prostora imena",tocan:!1},{odgovor:"koji nema implementirane sve postupke.",tocan:!1}],kategorija:6},{id:114,pitanje:"class Primjer \n{ \n\t private int index; \n\npublic int Index \n\t{ \n\t\tget { return index; } \n\t\tset { \n\t\t\t if (value <= 0) { this.index = 0; ) \n\t\t\telse if (value > 100) { this.index = 100; } \n\t\telse { this.index = value; } \n\t\t} \n\t} \n} \nProgramski odsje\u010dak je primjer ",odgovori:[{odgovor:"barikade",tocan:!0},{odgovor:"tvrdnje",tocan:!1},{odgovor:"indeksera",tocan:!1},{odgovor:"iznimke",tocan:!1},{odgovor:"ofenzivnog programiranja",tocan:!1}],kategorija:6},{id:115,pitanje:"try { \n\t... \n\tthrow new NullReferenceException \n} \ncatch (Exception exc){ \n\tConsole.WriteLine('EXC'); \n} \ncatch (NullReferenceException nre){ \n\tConsole.WriteLine('NRE'); \n} \nfinally { \nConsole.WriteLine('F'); \n} \nIzvr\u0161avanjem gornjeg odsje\u010dka na ekranu se ispisuje",odgovori:[{odgovor:"EXC \nF",tocan:!0},{odgovor:"NRE",tocan:!1},{odgovor:"NRE \nF",tocan:!1},{odgovor:"EXC \nNRE \nF",tocan:!1},{odgovor:"F",tocan:!1}],kategorija:6},{id:116,pitanje:"Ako Automobil i Motocikl naslje\u0111uju MotornoVozilo onda je u postupak IspisiVozilo mogu\u0107e poslati i List<Automobil>, jer je su\u010delje IEnumerable< T> \n\nvoid IspisiVozila(IEnumerable<MotornoVozilo> vozila) { \n\tfor(var vozilo in vozila) \n\t\tConsole.WriteLine(vozilo.Model); \n}",odgovori:[{odgovor:"kovarijantno",tocan:!0},{odgovor:"varijantno",tocan:!1},{odgovor:"irelevantno",tocan:!1},{odgovor:"kontravarijantno",tocan:!1},{odgovor:"invarijantno",tocan:!1}],kategorija:6},{id:117,pitanje:"Izbacite uljeza",odgovori:[{odgovor:"hibridna aplikacija",tocan:!0},{odgovor:"vi\u0161eslojna aplikacija",tocan:!1},{odgovor:"debeli klijent",tocan:!1},{odgovor:"tanki klijent",tocan:!1},{odgovor:"mobilna aplikacija",tocan:!1}],kategorija:6},{id:118,pitanje:"U kojoj fazi RUP-a se prikupljaju zahtjevi",odgovori:[{odgovor:"u svim osim u fazu prijelaza",tocan:!0},{odgovor:"u fazi po\u010dinjanja",tocan:!1},{odgovor:"u fazi konstrukcije",tocan:!1},{odgovor:"u fazi prijelaza",tocan:!1},{odgovor:"u fazi po\u010dinjanja i elaboracije",tocan:!1}],kategorija:6},{id:119,pitanje:"Hijerarhijska lista faza, zadataka i prekretnica se skra\u0107enom naziva",odgovori:[{odgovor:"WBS",tocan:!0},{odgovor:"Top-down",tocan:!1},{odgovor:"PhaTaMi",tocan:!1},{odgovor:"ABS",tocan:!1},{odgovor:"PTM",tocan:!1}],kategorija:6},{id:120,pitanje:"Razred r1 = new Razred('A1'); \nusing (Razred r2 = new Razred('B2')) { \n\tRazred r3 = new Razred('C3'); \n\tr3 = null; \n\tthrow new Exception('Poruka'); \n} \nr1.Dispose(); \nAko je razred Razred implementiran tako da u postupku Dispose ispisuje parametar primljen u konstruktoru, gornji programski odsje\u010dak \u0107e ispisati",odgovori:[{odgovor:"B2",tocan:!0},{odgovor:"C3",tocan:!1},{odgovor:"B2 \nC3",tocan:!1},{odgovor:"B2 \nA1",tocan:!1},{odgovor:"B2 \nC3 \nA1",tocan:!1}],kategorija:6},{id:121,pitanje:"\u0160to od navedenog nije vrijednosni tip",odgovori:[{odgovor:"string",tocan:!0},{odgovor:"float",tocan:!1},{odgovor:"Nullable",tocan:!1},{odgovor:"System.Int32",tocan:!1},{odgovor:"int?",tocan:!1}],kategorija:6},{id:122,pitanje:"Koja razina va\u017enosti zapisa se koristi za evidentiranje pogre\u0161aka i iznimki koje se ne mogu obraditi te predstavljaju kriti\u010dnu pogre\u0161ku za odre\u0111eni postupak, ali ne i za cijelu aplikaciju (npr. pogre\u0161ka prilikom dodavanja novog podatka u bazu)?",odgovori:[{odgovor:"Error",tocan:!0},{odgovor:"Warning",tocan:!1},{odgovor:"Information",tocan:!1},{odgovor:"Debug",tocan:!1},{odgovor:"Critical",tocan:!1}],kategorija:6},{id:123,pitanje:"Koja razina va\u017enosti zapisa se koristi za informativne poruke u cilju otklanjanja pogre\u0161aka te predstavlja kratkoro\u010dnu informaciju (ne nu\u017eno samo programeru)?",odgovori:[{odgovor:"Debug",tocan:!0},{odgovor:"Warning",tocan:!1},{odgovor:"Information",tocan:!1},{odgovor:"Error",tocan:!1},{odgovor:"Trace",tocan:!1}],kategorija:6},{id:124,pitanje:"Na\u010din kreiranja Entity Framework modela u kojem je model opisan kroz ru\u010dno napisane razrede (bez grafi\u010dkog su\u010delja), a baza podataka nastaje na osnovu modela naziva se",odgovori:[{odgovor:"Database First",tocan:!0},{odgovor:"Forward Model",tocan:!1},{odgovor:"Migration Model",tocan:!1},{odgovor:"Model First",tocan:!1},{odgovor:"Code First",tocan:!1}],kategorija:6},{id:125,pitanje:"Parovi oblika naziv=vrijednost navedeni iza upitnika u adresi neke stranice",odgovori:[{odgovor:"Query string",tocan:!0},{odgovor:"URI string",tocan:!1},{odgovor:"GET request",tocan:!1},{odgovor:"POST request",tocan:!1},{odgovor:"CGI parameter",tocan:!1}],kategorija:6},{id:126,pitanje:"U koju vrstu odr\u017eavanja spada nadgradnja sustava da bi se rije\u0161ili novi problemi",odgovori:[{odgovor:"perfektivno",tocan:!0},{odgovor:"korektivno",tocan:!1},{odgovor:"preventivno",tocan:!1},{odgovor:"iterativno",tocan:!1},{odgovor:"adaptivno",tocan:!1}],kategorija:6},{id:127,pitanje:"Modularno uvo\u0111enje novog sustava u primjenu ima",odgovori:[{odgovor:"srednji rizik, visok tro\u0161ak i dugo trajanje",tocan:!0},{odgovor:"nizak rizik, srednji tro\u0161ak i kratko trajanje",tocan:!1},{odgovor:"nizak rizik, nizak tro\u0161ak i dugo trajanje",tocan:!1},{odgovor:"srednji rizik, nizak tro\u0161ak i dugo trajanje",tocan:!1},{odgovor:"visok rizik, nizak tro\u0161ak i dugo trajanje",tocan:!1}],kategorija:6},{id:128,pitanje:"Testiranje u kojem se provjerava kako cjelina radi, a probni slu\u010dajevi izvode se uvidom u programski kod naziva se",odgovori:[{odgovor:"strukturalno testiranje (white-box testing)",tocan:!0},{odgovor:"kriti\u010dno testiranje (red-box testing)",tocan:!1},{odgovor:"testiranje autenti\u010dnosti (gray-box testing)",tocan:!1},{odgovor:"funkcionalno testiranje (black-box testing)",tocan:!1},{odgovor:"ekolo\u0161ko testiranje (green-box testing)",tocan:!1}],kategorija:6},{id:129,pitanje:"Testiranje jesu li zadovoljeni izvorni poslovni zahtjevi naziva se",odgovori:[{odgovor:"testiranje zahtjeva (requirements testing)",tocan:!0},{odgovor:"funkcionalno testiranje (black-box testing)",tocan:!1},{odgovor:"poslovno testiranje (business testing)",tocan:!1},{odgovor:"strukturalno testiranje (white-box testing)",tocan:!1},{odgovor:"testiranje autenti\u010dnosti (gray-box testing)",tocan:!1}],kategorija:6},{id:130,pitanje:"Za upit definiran s \n\n SELECT OznDrzave, NazDrzave FROM Drzava; \n\ni odgovaraju\u0107e instanciranje objekata tipa DbCommand i IDataReader za gore navedenu naredbu, \u0161to od navedenog NIJE ispravan na\u010din dohvata vrijednosti nekog retka u tablici Drzava?",odgovori:[{odgovor:"string oznaka = (string) reader.GetName('OznDrzave'); \nstring naziv = (string) reader.GetName('NazDrzave');",tocan:!0},{odgovor:"string oznaka = reader[0].ToString(); \nstring naziv = reader[1].ToString();",tocan:!1},{odgovor:"string oznaka = reader.GetString(0); \nstring naziv = reader.GetString(1);",tocan:!1},{odgovor:"string oznaka = reader['OznDrzave'].ToString(); \nstring naziv = reader['NazDrzave].ToString();",tocan:!1},{odgovor:"string oznaka = (string) reader['OznDrzave']; \nstring naziv = (string) reader['NazDrzave].;",tocan:!1}],kategorija:5},{id:131,pitanje:"Ako Automobil i Motocikl naslje\u0111uju MotornoVozilo onda je u postupak IspisiVozilo mogu\u0107e poslati i List<Automobil>, jer je su\u010delje IEnumerable< T> \n void IspisiVozila(IEnumerable<MotornoVozilo> vozila) { \n\tfor(var vozilo in vozila) \n\t\tConsole.WriteLine(vozilo.Model); \n}",odgovori:[{odgovor:"varijantno",tocan:!0},{odgovor:"kontravarijantno",tocan:!1},{odgovor:"kovarijantno",tocan:!1},{odgovor:"invarijantno",tocan:!1},{odgovor:"irelevaltno",tocan:!1}],kategorija:4},{id:132,pitanje:"Dokazivanje da proizvod zadovoljava zahtjeve i uvjete preuzimanja naziva se",odgovori:[{odgovor:"provjera prihvatljivosti",tocan:!0},{odgovor:"testiranje standarnosti",tocan:!1},{odgovor:"testiranje performansi",tocan:!1},{odgovor:"testiranje korisni\u010dkog su\u010delja",tocan:!1},{odgovor:"testiranje dokumentacije",tocan:!1}],kategorija:3},{id:133,pitanje:"Ako je SifArtikla primarni klju\u010d za tablicu Artikl te ako prije izvo\u0111enja programskog odsje\u010dka u tablici Artikl nije bilo artikala sa \u0161iframa 0-5, izvo\u0111enjem sljede\u0107eg programskog odsje\u010dka \n\nfor(int i=1; i<10; i++) \n{ \n\tusing (var context = new FirmaContext()) \n\t{ \n\t\tArtikl artikl = new Artikl \n\t\t{ \n\t\tSifArtikla = i/2, CijArtikla = 10m, \n\t\t\tJedMjere = 'kom', NazArtikla = i.ToString() \n\t\t} \n\t\tcontext.Artikl.Add(artikl); \n\t\tontext.SaveChanges(); \n\t}; \n} \n\n broj zapisa u tablici Artikl pove\u0107avt \u0107e se za",odgovori:[{odgovor:"2",tocan:!0},{odgovor:"0",tocan:!1},{odgovor:"6",tocan:!1},{odgovor:"5",tocan:!1},{odgovor:"1",tocan:!1}],kategorija:2},{id:134,pitanje:"Koja razina va\u017enosti zapisa se koristi za evidentiranje zapisa trajnijeg karaktera koji slu\u017ei za pra\u0107enje toka rada aplikacije (npr. informacije o posjetu odre\u0111enoj stranici ili evidencija postavljenih kriterija pretrage)?",odgovori:[{odgovor:"information",tocan:!0},{odgovor:"Warning",tocan:!1},{odgovor:"Debug",tocan:!1},{odgovor:"Trace",tocan:!1},{odgovor:"Error",tocan:!1}],kategorija:2},{id:135,pitanje:"Neka se na adresama https://servis/app/mjesto i https://server/appdrzava nalaze web-servisi za rad s mjestima te neka za manipulaciju podacima koriste GET, POST, PUT i DELETE metode. \nPrilikom dohvata svim mjesta ili dr\u017eava web-servis vra\u0107a popis mjesta i dr\u017eava bez dodatnih informacija. \nPrilikom dodavanja novog podatka korisniku se vra\u0107a status 201 uz pohranjeni podatak i adresu koja jednozna\u010dno odre\u0111uje dodatni podatak. \nKoji nivo Richardsonovog modela zrelosti zadovoljava ovaj web-servis",odgovori:[{odgovor:"2",tocan:!0},{odgovor:"PATCH",tocan:!1},{odgovor:"GET + POST",tocan:!1},{odgovor:"1",tocan:!1},{odgovor:"3",tocan:!1}],kategorija:1}],g=i(0);function s(o){var a=o.brojKategorije,i=Object(n.useState)(0),r=Object(d.a)(i,2),t=r[0],e=r[1],s=Object(n.useState)([]),c=Object(d.a)(s,2),k=c[0],p=c[1];Object(n.useEffect)((function(){var o=j.filter((function(o){return o.kategorija===a})).sort((function(){return.5-Math.random()}));o.forEach((function(o){return o.odgovori.sort((function(){return.5-Math.random()}))})),p(Object(v.a)(o))}),[]);var u=k.length;return Object(g.jsxs)("div",{children:[Object(g.jsxs)("p",{className:"kvizNaslov",children:["Kategorija ",a]}),k.map((function(o,a){return Object(g.jsxs)("div",{className:"pitanje",children:[Object(g.jsxs)("p",{className:"pitanjeNaslov",children:[a+1,". ",o.pitanje]}),o.odgovori.map((function(o,i){return Object(g.jsxs)("div",{id:"odg-"+a+"-"+i,className:"odgovor",onClick:function(){return function(o,a){var i=k[o].odgovori.map((function(o){return o.tocan})).indexOf(!0);document.getElementById("odg-"+o+"-"+i).classList.contains("correct")||(document.getElementById("odg-"+o+"-"+i).classList.add("correct"),i===a?e(t+1):document.getElementById("odg-"+o+"-"+a).classList.add(!0===k[o].odgovori[a].tocan?"correct":"incorrect"))}(a,i)},children:[Object(g.jsxs)("div",{className:"slovoPitanja",children:[String.fromCharCode("a".charCodeAt(0)+i),")"]}),Object(g.jsx)("p",{children:o.odgovor}),Object(g.jsx)("div",{})]},i)}))]},a)})),Object(g.jsxs)("div",{className:"rezultati",children:[Object(g.jsxs)("p",{children:["Odgovorili ste to\u010dno: ",t,"/",u," pitanja"]}),Object(g.jsxs)("p",{children:["Postotak: ",parseFloat(t/u*100).toFixed(2),"%"]}),Object(g.jsx)("p",{children:t/u*100<50?"Debil\u010dino ubij se, Maro bi bolje":"Bravo kretenu"})]})]})}var c=function(){var o=Object(n.useState)(0),a=Object(d.a)(o,2),i=a[0],r=a[1],t=[1,2,3,4,5,6].map((function(o,a){return Object(g.jsx)("div",{className:"kategorija",onClick:function(){return r(o)},children:Object(g.jsxs)("p",{className:"kategorijaNaslov",children:["Kategorija ",o]})},a)}));return Object(g.jsx)("div",{className:"App",children:0===i?Object(g.jsxs)("div",{className:"kategorije",children:[Object(g.jsx)("p",{className:"kvizNaslov",children:"PI-2021 KVIZ"}),t]}):Object(g.jsxs)("div",{className:"pitanjaUKategoriji",children:[Object(g.jsx)("div",{onClick:function(){return r(0)},className:"nazad",children:"Nazad"}),Object(g.jsx)(s,{brojKategorije:i})]})})},k=function(o){o&&o instanceof Function&&i.e(3).then(i.bind(null,16)).then((function(a){var i=a.getCLS,n=a.getFID,r=a.getFCP,t=a.getLCP,e=a.getTTFB;i(o),n(o),r(o),t(o),e(o)}))};e.a.render(Object(g.jsx)(r.a.StrictMode,{children:Object(g.jsx)(c,{})}),document.getElementById("root")),k()},6:function(o,a,i){}},[[15,1,2]]]);
//# sourceMappingURL=main.93cf0b65.chunk.js.map